/*
                    FormMenu j = new FormMenu();
                    j.PackName = "Console[控制器]";
                    MainWindow uc = SmPro.System.System.GetSystemWindow(sender);
                    ObjectClassArg f = new ObjectClassArg(() =>
                    {
                        ListVebel[] v = ObjectClass<ListVebel>.GetIndexl;
                        ListVebel vt = null;
                        if (v != null)
                            foreach (ListVebel k in v)
                            {
                                if (k.ListIndex.Name == "DownList")
                                {
                                    vt = k;
                                    break;
                                }
                            }
                        if (vt != null)
                        {
                            ConsoleShowWindow p = new ConsoleShowWindow();
                            p.Name = "y8" + ConsoleShowWindow.GetIndex.Length;
                            p.Text = "Console" + ConsoleShowWindow.GetIndex.Length;
                            p.BackText += P_BackText;
                            p.Dock = DockStyle.Fill;
                            vt.AddFormSope(p);
                            p.ShowText.ReadOnly = false;
                            p.ReadKeepAlie = true;

                            p.FortText = Color.Green;
                            p.ShowText.SelectionColor = Color.Green;
                            p.ConsoleWrite("[C#] : ");

                            p.Show();
                            /*
                            p.ConsoleWrite("SeeMods Console\r\nCopyright (C) SeeMods 2020 ToCompe\r\n\r\n");
                            p.ShowText.ReadOnly = false;
                            p.ReadKeepAlie = true;
                            p.Dock = DockStyle.Fill;
                            object[] y9 = r.RunFTA(r.args.extr + "\\cmd", "runload", null, "ConsoleTc", null, p);
                            if (y9.Length > 0)
                                if (y9[0] is Exception)
                                {
                                    p.FortText = Color.Red;
                                    p.ConsoleWriteLine("Exception : for " + (y9[0] as Exception).ToString());
                                }
                            p.FortText = Color.Green;
                            
                        }
                    });

                    bool fdc = false;
                    FormMenu m8 = new FormMenu();
                    m8.ObjectClassArgL = new ObjectClass<FormMenu>.ObjectClassArg(() => {
                        new Thread(() => {
                            NCKOLCTE bl = new NCKOLCTE();
                            ListVebel lb = new ListVebel();

                            m8.CheckForm = bl;

                            bl.AddControl(lb);
                            bl.Text = "List Window";
                            lb.Dock = DockStyle.Fill;
                            lb.Show();

                            m8.PackName = bl.Text;
                            m8.CheckForm = bl;

                            if (!fdc)
                            {
                                fdc = true;
                                return;
                            }

                            bl.TopLevel = false;
                            bl.Name += new Random().Next(0, 456);
                            SetETCWindowToSystem m = new SetETCWindowToSystem(uc);
                            r.mi.AddControlInvoke(bl);
                            m.SetLocationUp(bl);
                            Thread.Sleep(500);
                            m8.Check = true;
                            Application.Run(bl);
                            m8.Check = false;

                        }).Start();
                    });
                    m8.ObjectClassArgL();

                    FormMenu mb = new FormMenu();
                    mb.PackName = "ConsoleList";
                    mb.Name = "jfConsoleList";
                    mb.YNCheck = true;
                    mb.ObjectClassArgL = new ObjectClass<FormMenu>.ObjectClassArg(() =>
                    {
                        new Thread(() =>
                        {
                            ConsoleShowWindow p = new ConsoleShowWindow();

                            p.Name = "y8" + j.IDX;
                            p.Text = "Console";
                            p.BackText += P_BackText;

                            //RunCommandSerd.RunCommand(new ConsoleShowWindow(), "CreativeWindow -new-creative ConsoleList");
                            m8.ObjectClassArgL();
                            Thread.Sleep(500);
                            SetETCWindowToSystem fj = new SetETCWindowToSystem(r.mi);

                            NCKOLCTE bj = fj.SearchWindowInText("List Window") as NCKOLCTE;//CreativeWindow.CreativeInWindow("ConsoleList");
                            
                            //bj.Name += j.IDX;
                            /*
                            foreach (Form l in ObjectClass<Form>.GetIndexl)
                            {
                                if (l.Text == "ConsoleList")
                                {
                                    gh = l;
                                    List<Form> k = new List<Form>(ObjectClass<Form>.GetIndexl);
                                    k.Remove(l);
                                    ObjectClass<Form>.GetIndexl = k.ToArray();
                                    if (ObjectClass<Form>.GetIndexl.Length == 0)
                                        ObjectClass<Form>.GetIndexl = null;
                                }
                            }
                            //bj.WindowsCloseHide = true;

                            ListVebel vt = null;

                            foreach (Control k in bj.Controls)
                            {
                                if (k is ListVebel)
                                {
                                    vt = k as ListVebel;
                                }
                            }

                            if (vt == null)
                            {
                                vt = new ListVebel();
                                p.AutoSize = true;
                                p.Dock = DockStyle.Fill;
                                p.Show();
                                bj.AddControl(vt);
                                vt.ListIndex.Name = "DownList";
                                vt.Name = "mksd.jsbf" + j.IDX;
                            }
                            vt.AddFormSope(p);

                            //bj.BeginInvoke(new MethodInvoker(() => { bj.Show(); }));

                            p.ConsoleWrite("SeeMods Console\r\nCopyright (C) SeeMods 2020 ToCompe\r\n\r\n");
                            p.ShowText.ReadOnly = false;
                            p.ReadKeepAlie = true;
                            p.Dock = DockStyle.Fill;
                            object[] y9 = r.RunFTA(r.args.extr + "\\cmd", "runload", null, "ConsoleTc", null, p);
                            if (y9.Length > 0)
                                if (y9[0] is Exception)
                                {
                                    p.FortText = Color.Red;
                                    p.ConsoleWriteLine("Exception : for " + (y9[0] as Exception).ToString());
                                }
                            p.ShowText.SelectionColor = Color.Green;
                            p.ConsoleWrite("\r\n[C#] : ");

                            bj.Height = 240;
                            SetETCWindowToSystem m = new SetETCWindowToSystem(uc);
                            m.SetLocationDown(bj);
                            m.SetWeightToSystem(bj);

                            p.Dock = DockStyle.Fill;
                            vt.Dock = DockStyle.Fill;
                            vt.Show();

                            mb.CheckForm = bj;
                            m.SetLocationDown(bj);
                            mb.Check = true;
                            Thread.Sleep(1500);
                            Application.Run(bj);
                            //bj = null;
                            GC.ReRegisterForFinalize(bj);
                            mb.Check = false;
                            /*
                            ListVebel vt = new ListVebel();
                            vt.AddFormSope(p);
                            NCKOLCTE bpo = new NCKOLCTE();
                            bpo.TopLevel = false;
                            if (uc.InvokeRequired)
                                uc.Invoke(new MethodInvoker(delegate { uc.Controls.Add(bpo); }));
                            else
                                uc.Controls.Add(bpo);
                            if (bpo.ShowIn.InvokeRequired)
                                bpo.ShowIn.Invoke(new MethodInvoker(delegate { bpo.ShowIn.Controls.Add(vt); }));
                            else
                                bpo.ShowIn.Controls.Add(vt);
                            vt.Dock = DockStyle.Fill;
                            //nCKOLCTE.Show();
                            //uc.AddControlInvoke(bpo);
                            //bpo.Show();
                            bpo.Height = 210;
                            bpo.LockWindow = true;
                            SetETCWindowToSystem m = new SetETCWindowToSystem(uc);
                            m.SetLocationDown(bpo);
                            m.SetWeightToSystem(bpo);
                            bpo.TitleName.Text = bpo.Text = "Console Run";
                            p.Show();
                            j.CheckForm = bpo;
                            Application.Run(bpo);

                        }).Start();
                    });
                    mb.ObjectClassArgL();
                    
                    FormMenu mn = CreativeWindow.CreativeListName(m8.IDX);
                    FormMenu mbf = new FormMenu();
                    mbf.PackName = "Control Windows";
                    mbf.Package = mn.Package;
                    mbf.Image = mn.Image;
                    mbf.Name = mn.Name;
                    mbf.CheckForm = mn.CheckForm;
                    new Thread(() => {
                        while (true)
                        {
                            mbf.Check = mn.Check;
                            Thread.Sleep(1500);
                        }
                    }).Start();
                    mbf.SaveObject = mn;
                    mbf.YNCheck = true;
                    mn.ObjectClassArgL();
                    new Thread(() => { Thread.Sleep(200); mn.CheckForm.Text = "Console Control LessOn";
                        SetETCWindowToSystem e = new SetETCWindowToSystem(r.mi);
                        e.SetLocationRight(mn.CheckForm);
                        e.SetHeightToSystem(mn.CheckForm);
                        e.SetWeightToSystem(mn.CheckForm);
                        mn.CheckForm.Height -= 240;
                        mn.CheckForm.Width = (mn.CheckForm.Width / 2) + 100;
                        mn.CheckForm.Location = new Point((r.mi.Width / 2) - 100, mn.CheckForm.Location.Y);
                        
                    }).Start();
                    //mn.CheckForm.Text = "Console Control LessOn";
                    //j.ObjectClassArgL = f;
                    //f();
                    /*
                    MainWindow uib = SmPro.System.System.GetSystemWindow(sender);
                    //ListVebel y = new ListVebel();
                    /*
                    ConsoleGSD p7 = new ConsoleGSD();
                    y.AddFormSope(p7);
                    uib.AddControlInvoke(y);
                    y.Show();
                    y.Location = new Point(385, 216);
                    Application.Run(p7);
5
                    NCKOLCTE e = new NCKOLCTE();
                    ListVebel bv = new ListVebel();
                    e.TitleName.Text = "Console Control";
                    ConsoleShowWindow p = new ConsoleShowWindow();
                    p.Name = "y8";
                    p.BackText += P_BackText;
                    e.ShowIn.Controls.Add(p);
                    p.Show();
                    p.ConsoleWrite("SeeMods Console\r\nCopyright (C) SeeMods 2020 ToCompe\r\n\r\n");
                    p.ShowText.ReadOnly = false;
                    p.ReadKeepAlie = true;
                    p.Dock = DockStyle.Fill;
                    NCKOLCTE yu = new NCKOLCTE();
                    SetOwenerWindowToSystem g = new SetOwenerWindowToSystem(uib, yu);
                    g.SetLocation(0, 0);
                    e.TopLevel = false;
                    yu.TopLevel = false;
                    g.Show(false);
                    object[] y9 = r.RunFTA(r.args.extr + "\\cmd", "runload", null, "ConsoleTc", null, p);
                    if (y9.Length > 0)
                        if (y9[0] is Exception)
                        {
                            p.FortText = Color.Red;
                            p.ConsoleWriteLine("Exception : for " + (y9[0] as Exception).ToString());
                        }
                    p.ShowText.SelectionColor = Color.Green;
                    p.ConsoleWrite("[C#] : ");
                    bv.AddFormSope(e);
                    bv.SpForm = 0;
                    //new Thread(() => { e.Show(); }).Start();

                    bv.Dock = DockStyle.Fill;
                    yu.ShowIn.Controls.Add(bv);
                    bv.Show();
                    new Thread(() => { Application.Run(yu); }).Start();

                    bool fdc = false;
                    FormMenu m8 = new FormMenu();
                    ObjectClass<FormMenu>.ObjectClassArg a = new ObjectClass<FormMenu>.ObjectClassArg(() =>
                    {
                        NCKOLCTETU bl = new NCKOLCTETU();

                        if (!fdc)
                            m8.CheckForm = bl;

                        bl.Text = "List Window";

                        m8.PackName = bl.Text;
                        if (!fdc)
                        {
                            fdc = true;
                            return;
                        }

                        m8.CheckForms.Add(bl);

                        //bl = m8.CheckForm as NCKOLCTETU;
                        ListVebel lb = new ListVebel();

                        lb.Dock = DockStyle.Fill;
                        lb.Name = "h1";
                        //bl.TopLevel = false;
                        bl.AddControl(lb);
                        lb.Show();

                        //bl.TopLevel = false;
                        bl.Name += new Random().Next(0, 456);
                        SetETCWindowToSystem m = new SetETCWindowToSystem(r.mi);
                        r.mi.AddControlInvoke(bl);

                        m.SetLocationUp(bl);
                        Thread.Sleep(500);
                        m8.Check = true; ;
                        //Monitor.Enter(bl);
                        bl.Show();
                        //Thread t = Thread.CurrentThread;
                        bl.Closing += (object senders, ObjectEvent e) => { m8.Check = false; };
                        //t.Suspend();
                    });
                    m8.ObjectClassArgL = a;
                    m8.ObjectClassArgL();

                    FormMenu mk = new FormMenu();
                    mk.YNCheck = true;
                    mk.PackName = FanYi.fromepk("RC","form.loadwindow.Creative.MainConsole", r.lauge);
                    mk.ObjectClassArgL = new ObjectClass<FormMenu>.ObjectClassArg(() =>
                    {
                        Thread vt = new Thread(() =>
                        {
                            m8.ObjectClassArgL();
                            mk.Check = m8.Check;
                            mk.CheckForm = m8.CheckForms[0];
                            NCKOLCTETU g = m8.CheckForms[0] as NCKOLCTETU;
                            g.Text = mk.PackName;
                            ListVebel v = null;
                            foreach (Control l in g.GetControl())
                            {
                                if (l is ListVebel)
                                {
                                    v = l as ListVebel;
                                    break;
                                }
                            }
                            if (v == null)
                                v = new ListVebel();

                            ConsoleShowWindow p = new ConsoleShowWindow();
                            p.Name = "y7";
                            p.Text = "Console";
                            p.BackText += P_BackText;

                            v.AddFormSope(p);
                            //r.mi.AddControlInvoke(p);

                            //Monitor.Enter(p);
                            p.ReadText = true;
                            p.ReadKeepAlie = true;

                            p.Show();

                            //Console.WriteLine(p.ShowText.InvokeRequired) ;
                            //p.ShowText.AppendText("1");
                            void TI()
                            {
                                //Thread.Sleep(1000);
                                Thread tq = new Thread(() =>
                                {
                                    Thread.Sleep(100);
                                    //Console.WriteLine(p.InvokeRequired);
                                    p.Dock = DockStyle.Fill;
                                    p.ShowText.SelectionColor = Color.Green;
                                    p.ConsoleWrite("SeeMods Console\r\nCopyright (C) SeeMods 2020 ToCompe\r\n\r\n");
                                    p.ShowText.ReadOnly = false;
                                    p.ReadKeepAlie = true;
                                    //p.Dock = DockStyle.Fill;
                                    object[] y9 = r.RunFTA(r.args.extr + "/cmd", "runload", null, "ConsoleTc", null, p);
                                    if (y9.Length > 0)
                                        if (y9[0] is Exception)
                                        {
                                            p.FortText = Color.Red;
                                            p.ConsoleWriteLine("Exception : for " + (y9[0] as Exception).ToString());
                                        }
                                    p.ShowText.SelectionColor = Color.Green;
                                    p.ConsoleWrite("\r\n[C#] : ");
                                });
                                tq.Start();
                            }

                            TI();


                            g.Height = 240;

                            SetETCWindowToSystem t = new SetETCWindowToSystem(r.mi);

                            t.SetLocationDown(g);
                            t.SetWeightToSystem(g);

                            new Thread(() =>
                            {
                                while (true)
                                {
                                    mk.Check = m8.Check;
                                    if (!mk.Check)
                                        break;
                                    Thread.Sleep(1000);
                                }
                            }).Start();
                        });
                        //vt.IsBackground = true;
                        vt.Start();
                    });
                    mk.ObjectClassArgL();

                    FormMenu m9 = new FormMenu();
                    m9.PackName = FanYi.fromepk("RC", "form.loadwindow.Creative.ControlMain", r.lauge);
                    m9.ObjectClassArgL = new ObjectClass<FormMenu>.ObjectClassArg(() => {
                        new Thread(() =>
                        {
                            Thread.Sleep(500);
                            m8.ObjectClassArgL();
                            m9.CheckForm = m8.CheckForms[1];
                            m9.CheckForm.Name = "Core Code area";
                            m9.CheckForm.Text = m9.PackName;
                            NCKOLCTETU u = m9.CheckForm as NCKOLCTETU;
                            SetETCWindowToSystem sp = new SetETCWindowToSystem(r.mi);
                            u.Width = sp.GetWeightToSystem() / 2;
                            sp.SetLocationRight(u);
                            sp.SetHeightToSystem(u);

                            ListVebel v = null;
                            foreach (Control l in u.GetControl())
                            {
                                if (l is ListVebel)
                                {
                                    v = l as ListVebel;
                                    break;
                                }
                            }
                            if (v == null)
                                v = new ListVebel();

                            v.Name = "Code Core List";

                            ConsoleShowWindow p = new ConsoleShowWindow();
                            p.Name = "Static area";
                            p.Text = "Static";
                            //p.Dock = DockStyle.Fill;
                            v.AddFormSope(p);
                            //p.ForeColor = Color.Aqua;
                            //p.ConsoleWriteLine("SeeMods Static Show area");

                            void TI()
                            {
                                //Thread.Sleep(1000);
                                Thread tq = new Thread(() =>
                                {
                                    Thread.Sleep(100);
                                    //Console.WriteLine(p.InvokeRequired);
                                    p.Dock = DockStyle.Fill;
                                    p.FortText = Color.Aqua;
                                    p.ConsoleWriteLine("SeeMods Static area");
                                });
                                tq.Start();
                            }

                            TI();

                            p.Show();
                            u.Height -= 240;
                        }).Start();
                    });
                    m9.ObjectClassArgL();

                    
                    FormMenu m10 = new FormMenu();
                    m10.PackName = FanYi.fromepk("RC", "form.loadwindow.Creative.ViewConsole", r.lauge);
                    m10.ObjectClassArgL = new ObjectClass<FormMenu>.ObjectClassArg(() => {
                        new Thread(() => {
                            Thread.Sleep(1000);
                            m8.ObjectClassArgL();
                            m10.CheckForm = m8.CheckForms[2];
                            m10.CheckForm.Name = "f3";
                            m10.CheckForm.Text = m10.PackName;
                            NCKOLCTETU u = m10.CheckForm as NCKOLCTETU;
                            SetETCWindowToSystem sp = new SetETCWindowToSystem(r.mi);
                            u.Width = sp.GetWeightToSystem() / 2;
                            sp.SetLocationLeft(u);
                            sp.SetHeightToSystem(u);

                            u.Height -= 240;

                            ListVebel v = null;
                            foreach (Control l in u.GetControl())
                            {
                                if (l is ListVebel)
                                {
                                    v = l as ListVebel;
                                    break;
                                }
                            }
                            if (v == null)
                                v = new ListVebel();

                            v.Name += "Code Core List-ipcontrol";

                            ListVerCs c = new ListVerCs();
                            c.Name = "cto2";
                            c.Text = FanYi.fromepk("RC", "list.this.text", r.lauge);

                            v.AddFormSope(c);
                            c.Show();
                            c.Dock = DockStyle.Fill;
                            c.BackColor = SystemColors.Control;
                        }).Start();
                    });
                    m10.ObjectClassArgL();
                    
                }

                if (vc == "sever-loading")
                {
                    ConsoleShowWindow w = new ConsoleShowWindow();
                    w.ConsoleS = true;
                    RunCommandSerd.Start(w, r);
                    Thread t = new Thread(() =>
                    {
                        while (true)
                            if (r.FinishLoadMemory)
                            {
                                w.FortText = Color.Green;
                                w.ConsoleWriteLine("\n");
                                w.ConsoleWrite("[C#]:");
                                string h = w.ConsoleReadLine();
                                RunCommandSerd.RunCommand(w, h);
                            }
                    });
                    t.IsBackground = true;
                    t.Start();
                    */
